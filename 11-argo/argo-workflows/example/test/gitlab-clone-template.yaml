apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: gitlab-clone
  namespace: ci
spec:
  serviceAccountName: argo-workflow
  workflowMetadata:
    labels:
      effect: git-clone
  #onExit: clone
  templates:
    - name: clone
      inputs:
        parameters:
          - name: REPO_URL
          - name: REVISION
          - name: GIT_TOKEN_SECRET
          - name: GIT_USERNAME
      script:
        volumeMounts:
          - mountPath: /workspace/repo
            name: work
        image: bitnami/git
        env:
          - name: TOKEN
            valueFrom:
              secretKeyRef:
                name: '{{inputs.parameters.GIT_TOKEN_SECRET}}'
                key: token
          - name: GIT_USERNAME
            value: '{{ inputs.parameters.GIT_USERNAME }}'
        command: [ bash ]
        source: |
          REPO_URL="{{inputs.parameters.REPO_URL}}"
          REVISION="{{inputs.parameters.REVISION}}"
          DIRPATH="{{ outputs.artifacts.repo.path }}"
          echo "inputs REPO_URL:$REPO_URL REVISION:$REVISION DIRPATH:$DIRPATH"
          rm -rf $DIRPATH
          mkdir -p $DIRPATH && cd $DIRPATH
          PATTERN="http://" && CHANGE="http://$GIT_USERNAME:$TOKEN@" && TOKEN_REPO="${REPO_URL/$PATTERN/"$CHANGE"}"
          git clone $TOKEN_REPO $DIRPATH -b $REVISION
      outputs:
        artifacts:
        - name: repo
          path: /workspace/repo/{{inputs.parameters.REVISION}}
          archive:
            tar:
              compressionLevel: 0
