---
# secret
apiVersion: v1
kind: Secret
metadata:
  name: gitlab-secret
  namespace: ci
type: Opaque
stringData:
  secretToken: "12345678"
---
# Event listener
apiVersion: triggers.tekton.dev/v1beta1
kind: EventListener
metadata:
  name: gitlab-event-listener
  namespace: ci
spec:
  serviceAccountName: tekton-triggers-example-sa 
  triggers:
    - triggerRef: gitlab-listener-trigger
---
# Trigger
apiVersion: triggers.tekton.dev/v1beta1
kind: Trigger
metadata:
  name: gitlab-listener-trigger
  namespace: ci
spec:
  interceptors:
    - name: "verify-gitlab-payload"
      ref:
        name: "gitlab"
        kind: ClusterInterceptor
      params:
        - name: secretRef
          value:
            secretName: "gitlab-secret"
            secretKey: "secretToken"
        - name: eventTypes
          value:
            - "Push Hook"
            - "Tag Push Hook"
    - name: "CEL filter: only when PRs are opened"
      ref:
        name: "cel"
      params:
        - name: "overlays"
          value:
            - key: branch_name
              expression: "body.ref.split('/')[2]" #Here we are splitting the body.ref as it gives output "ref/head/<branch name or tag>" with "/" to grep only branch name.
            - key: short_sha
              expression: "body.checkout_sha.truncate(8)"
            - key: subdirectory
              expression: "body.project.name" 
  bindings:
    - ref: binding
  template:
    ref: trigger-template
---
# Trigger Binding
apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerBinding
metadata:
  name: binding
  namespace: ci
spec:
  params:
    - name: gitrevision-tag
      value: $(extensions.branch_name) #the branch name that we split in trigger
    - name: container_tag
      value: $(extensions.short_sha)
    - name: subdirectory
      value: $(extensions.subdirectory)
    - name: short-sha
      value: $(extensions.short_sha)
---
# Trigger Template
apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerTemplate
metadata:
  name: trigger-template
  namespace: ci
spec:
  params:
    - name: gitrevision-tag
    - name: container_tag
    - name: subdirectory
    - name: short-sha
  resourcetemplates:
    - apiVersion: tekton.dev/v1
      kind: PipelineRun
      metadata:
        generateName: clone-build-helm-
      spec:
        pipelineRef:
          name: clone-build-helm
        taskRunSpecs:
        - pipelineTaskName: helm-install-middle
          serviceAccountName: tekton-helm-sa
        taskRunTemplate:
          serviceAccountName: tekton-triggers-example-sa
          podTemplate:
            securityContext:
              fsGroup: 65532
        workspaces:
        - name: shared-data
          persistentVolumeClaim:
            claimName: push-image-pvc
        - name: docker-credentials
          secret:
            secretName: harbor-secret
            items:
              - key: .dockerconfigjson
                path: config.json
        - name: gitlab-credentials
          secret:
            secretName: git-credentials
        params:
        - name: repo-url
          value: http://gitlab.x.xinghuihuyu.cn/client/qhyj_middle_proj.git
        - name: subdirectory
          value: $(tt.params.subdirectory)
        - name: container_image
          value: harbor.threshold.com:31339/tekton/middle
        - name: container_tag
          value: $(tt.params.container_tag)
        - name: short-sha
          value: $(tt.params.short-sha)
        - name: gitrevision-tag
          value: $(tt.params.gitrevision-tag)
        - name: charts_dir
          value: helm
        - name: releases_version
          value: v1
        - name: release_name
          value: middle
        - name: release_namespace
          value: default
        - name: overwrite_values
          value: "namespace=default,image.repo=harbor.threshold.com:31339/tekton/middle,image.tag=$(tt.params.gitrevision-tag)-$(tt.params.container_tag)"
